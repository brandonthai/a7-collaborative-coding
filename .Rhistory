git clone https://github.com/baronbaura/r-intro-practice.git
getwd()
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
setwd(dir = '/Users/baronbaura/Desktop/uw/Informatics/info498f/a7-collaborative-coding')
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
library(plotly)
library(dplyr)
setwd(dir = '/Users/baronbaura/Desktop/uw/Informatics/info498f/a7-collaborative-coding')
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GradeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
source('scripts/summary_info.r)
c
library(dplyr)
library(plotly)
setwd(dir = '/Users/baronbaura/Desktop/uw/Informatics/info498f/a7-collaborative-coding')
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
source('scripts/summary_info.r')
library(dplyr)
library(plotly)
setwd(dir = '/Users/baronbaura/Desktop/uw/Informatics/info498f/a7-collaborative-coding')
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
source('scripts/summary_info.r')
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
source('scripts/summary_info.r')
info_function(data)
test <- info_function(data)
test <- info_function(data)
test <- info_function(data)
source('scripts/summary_info.r')
test <- info_function(data)
source('scripts/chart2.r')
make_chart_2(data)
source('scripts/chart_1.r')
build_chart_1(data)
`r info$GradeApplyToInfo[ClassStanding == 'Freshman']`
library(kable)
library(knitr)
`r kable(info$GradeApplyToInfo)`
`r kable(info$OSApplyToInfo, format = 'markdown')
`r kable(info$OSApplyToInfo, format = 'markdown')`
`r kable(info$OSApplyToInfo, format = 'markdown')`
build_chart_1(data)
make_chart_2(data)
View(build_chart_1)
build_chart_1(data)
source('scripts/chart_1.r')
source('scripts/chart2.r')
build_chart_1 <- function(data) {
# changes the names of the columns in original data
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity',
'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited',
'CatOrDog', 'SeahawksFan')
# create new data frame that summarizes the number of students with different git experience
git_familiarity_data <- data %>% group_by(GitFamiliarity) %>%
summarise(number_of_students = n())
# name for the x axis
x <- list(
title = "Git Familiarity"
)
# name for the y axis
y <- list(
title = "Number of Students"
)
# creating a bar chart comparing the number of students with what level of git familiarity
p <- plot_ly(git_familiarity_data,
x = GitFamiliarity,
y = number_of_students,
type = "bar")
# setting the layout (x axis, y axis, title)
layout(p, xaxis = x, yaxis = y, title = 'Familiarity with Git')
return(p)
}
build_chart_1(data)
