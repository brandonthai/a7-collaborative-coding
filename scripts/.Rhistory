)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum = sum(killed) %>%
sum = sum(injured)
)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum = sum(killed) %>%
sum = sum(injured)
)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum = sum(killed) %>%
sum = sum(injured)
))
plot_data <- group_by(mass_shooting,state) %>%
summarise(
select(killed) %>%
sum = sum(killed) %>%
select(injured) %>%
sum = sum(injured)
)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed)
sum_of_injuries = sum(injured)
)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured)
)
View(plot_data)
plot_ly(data = plot_data, x = killed, y = injured, mode = "markers")
plot_ly(data = plot_data, x = sum_of_kills, y = sum_of_injuries, mode = "markers")
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state),
color = 'Total Casualties'
)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state),
color = Total Casualties
layout('Total Casualties in 2015 for each state')
)
total_impact = mutate(plot_data, sum = sum(sum_of_kills + sum_of_injuries))
View(plot_data)
View(total_impact)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured)
)
View(plot_data)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured) %>%
mutate(sum_of_kills + sum_of_injuries)
)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured) %>%
mutate_(sum_of_kills + sum_of_injuries)
)
View(plot_data)
View(total_impact)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed)
)
View(total_impact)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured)
)
View(plot_data)
plot_data$total_impacts <- mutate(plot_data, sum_of_kills + sum_of_injuries)
View(plot_data)
View(plot_data)
plot_data$total_impacts <- mutate(plot_data, sum_of_kills + sum_of_injuries)
View(plot_data)
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured)
)
View(plot_data)
plot_data <- mutate(plot_data, sum_of_kills + sum_of_injuries)
View(plot_data)
View(plot_data)
names(plot_data)[4] <- 'Total Impact'
View(plot_data)
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state),
color = Total Impact
layout('Total Impact in 2015 for each state')
)
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state,Total Impact),
color = Total Impact
layout('Total Impact in 2015 for each state')
)
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state),
layout(title = 'Total Impact in 2015 for each state')
)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state,'Total Impact: ',Total Impact),
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state,'Total Impact'),
layout(title = 'Total Impact in 2015 for each state')
)
```
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured)
)
plot_data <- mutate(plot_data, sum_of_kills + sum_of_injuries)
names(plot_data)[4] <- 'Total Impact'
View(plot_data)
---
title: "index"
output: html_document
---
```{r, echo=FALSE ,message=FALSE}
library(knitr)
library(plotly)
library(dplyr)
#set working directory
#setwd('/Users/baronbaura/Desktop/uw/informatics/info498f/a6-mapping-shootings/data')
mass_shooting <- read.csv("data/Mass-Shooting-Data.csv")
```
#Summary information
```{r,echo=FALSE,message=FALSE}
#Summarize relevant features
#how many shootings occurred?
#Answer: 330 shootings
num_shooting <- nrow(mass_shooting)
#how many lives were lost?
#Answer: 367 lives
lives_lost <- mass_shooting %>%
select(killed) %>%
sum(na.rm = FALSE)
#city that has the most injuries
#Answer: San Bernardino
most_injuries <- mass_shooting %>%
filter(killed == max(killed)) %>%
select(city)
#Summary of average number of deaths and injuries in 2015
summary_table <- mass_shooting %>%
summarise(
avg_kill = mean(killed),
avg_injury = mean(injured)
)
names(summary_table)[1] <- 'average number of deaths in a shooting in 2015'
names(summary_table)[2] <- 'average number of injuries in a shooting in 2015'
```
`r kable(summary_table)`
#Description of a particular incident
```{r,echo=FALSE,message=FALSE}
incident_date <- mass_shooting %>%
filter(date == 'July 7, 2015') %>%
select(date) #July 7, 2015
incident_city <- mass_shooting %>%
filter(date == 'July 7, 2015') %>%
select(city) #Baltimore
incident_state <- mass_shooting %>%
filter(date == 'July 7, 2015') %>%
select(state) #Maryland
incident_injured <- mass_shooting %>%
filter(date == 'July 7, 2015') %>%
select(injured)
incident_killed <- mass_shooting %>%
filter(date == 'July 7, 2015') %>%
select(killed)
incident_lat <- mass_shooting %>%
filter(date == 'July 7, 2015') %>%
select(lat)
incident_lng <- mass_shooting %>%
filter(date == 'July 7, 2015') %>%
select(lng)
```
On `r incident_date`, the city of `r incident_city` (located on longitude `r incident_lng` and latitude `r incident_lat`) witnessed a mass shooting that produced **`r incident_killed` deaths** and **`r incident_injured` injuries**
#An Interactive Map
```{r,echo=FALSE,message=FALSE}
library(plotly)
df <- read.csv('data/Mass-Shooting-Data.csv')
df$hover <- with(df, paste(city,",", state, "Injured: ", injured, "Killed: ", killed))
# marker styling
m <- list(
colorbar = list(title = "2015 Mass Shootings"),
size = 8, opacity = 0.8, symbol = 'circle'
)
# geo styling
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
plot_ly(df, lat = lat, lon = lng, text = hover,
type = 'scattergeo', locationmode = 'USA-states', mode = 'markers',
marker = m) %>%
layout(title = 'Mass Shootings in 2015', geo = g)
```
#Interactive plot
```{r, echo= FALSE, message= FALSE}
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured)
)
plot_data <- mutate(plot_data, sum_of_kills + sum_of_injuries)
names(plot_data)[4] <- 'Total Impact'
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state,'Total Impact'),
layout(title = 'Total Impact in 2015 for each state')
)
```
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state,'Total Impact'),
layout(title = 'Total Impact in 2015 for each state')
)
```
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state,'Total Impact'),
layout(title = 'Total Impact in 2015 for each state')
)
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
mode = "markers",
text = paste(state),
layout(title = 'Total Impact in 2015 for each state')
)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
color = `Total Impact`
mode = "markers",
text = paste(state),
layout(title = 'Total Impact in 2015 for each state')
)
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
color = `Total Impact`,
mode = "markers",
text = paste(state),
layout(title = 'Total Impact in 2015 for each state')
)
names(plot_data)[4] <- 'Total_Impact'
)
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
color = Total_Impact,
mode = "markers",
text = paste(state),
layout(title = 'Total Impact in 2015 for each state')
)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
color = Total_Impact,
mode = "markers",
text = paste(state)
) %>%
layout(title = 'Total Impact in 2015 for each state')
most_injuries <- mass_shooting %>%
filter(killed == max(injured)) %>%
select(city)
View(most_injuries)
most_injuries <- mass_shooting %>%
filter(injured == max(injured)) %>%
select(city)
View(most_injuries)
d_most_injuries <- mass_shooting %>%
filter(injured == max(injured)) %>%
select(date)
View(d_most_injuries)
num_most_injuries <- mass_shooting %>%
filter(injured == max(injured)) %>%
select(injured)
View(num_most_injuries)
View(most_injuries)
names(summary_table)[1] <- 'Average number of deaths in a shooting in 2015'
names(summary_table)[2] <- 'Average number of injuries in a shooting in 2015'
df <- read.csv('data/Mass-Shooting-Data.csv')
df$hover <- with(df, paste(city,",", state, "Injured: ", injured, "Killed: ", killed))
# marker styling
m <- list(
colorbar = list(title = "2015 Kills",killed),
size = 8, opacity = 0.8, symbol = 'circle'
)
# geo styling
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
plot_ly(df, lat = lat, lon = lng, text = hover,
type = 'scattergeo', locationmode = 'USA-states', mode = 'markers',
marker = m) %>%
layout(title = 'Mass Shootings in 2015', geo = g)
m <- list(
size = 8, opacity = 0.8, symbol = 'circle'
)
# geo styling
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
layout(title = 'Total Impact in 2015 for each state')
plot_data <- group_by(mass_shooting,state) %>%
summarise(
sum_of_kills = sum(killed),
sum_of_injuries = sum(injured)
)
plot_data <- mutate(plot_data, sum_of_kills + sum_of_injuries)
names(plot_data)[4] <- 'Total_Impact'
library(plotly)
plot_ly(data = plot_data,
x = sum_of_kills,
y = sum_of_injuries,
color = Total_Impact,
mode = "markers",
text = paste(state)
) %>%
layout(title = 'Total Impact in 2015 for each state')
plot_data <- group_by(mass_shooting,state) %>%
summarise(
Sum_of_Kills = sum(killed),
Sum_of_Injuries = sum(injured)
)
```{r, echo= FALSE, message= FALSE}
plot_data <- group_by(mass_shooting,state) %>%
summarise(
Sum_of_Kills = sum(killed),
Sum_of_Injuries = sum(injured)
)
plot_data <- mutate(plot_data, sum_of_kills + sum_of_injuries)
names(plot_data)[4] <- 'Total_Impact'
library(plotly)
plot_ly(data = plot_data,
x = Sum_of_Kills,
y = Sum_of_Injuries,
color = Total_Impact,
mode = "markers",
text = paste(state)
) %>%
layout(title = 'Total Impact in 2015 for each state')
plot_data <- group_by(mass_shooting,state) %>%
summarise(
Sum_of_Kills = sum(killed),
Sum_of_Injuries = sum(injured)
)
plot_data <- mutate(plot_data, Sum_of_kills + Sum_of_injuries)
names(plot_data)[4] <- 'Total_Impact'
library(plotly)
plot_ly(data = plot_data,
x = Sum_of_Kills,
y = Sum_of_Injuries,
color = Total_Impact,
mode = "markers",
text = paste(state)
) %>%
layout(title = 'Total Impact in 2015 for each state')
View(plot_data)
plot_data <- mutate(plot_data, Sum_of_kills + Sum_of_injuries)
View(plot_data)
plot_data <- mutate(plot_data, Sum_of_Kills + Sum_of_Injuries)
names(plot_data)[4] <- 'Total_Impact'
library(plotly)
plot_ly(data = plot_data,
x = Sum_of_Kills,
y = Sum_of_Injuries,
color = Total_Impact,
mode = "markers",
text = paste(state)
) %>%
layout(title = 'Total Impact in 2015 for each state')
name <- 'Brandon'
name <- 'Brandon'
data <- read.csv('https://raw.githubusercontent.com/INFO-498F/a7-collaborative-coding/master/data/intro_survey_data.csv?token=ABT2upFQZIFSpEQFgfDJrKeXe8ijXgj_ks5Ww6VIwA%3D%3D')
View(data)
source('scripts/FILE-NAME.R')
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-collaborative-coding/master/data/intro_survey_data.csv?token=ABT2upFQZIFSpEQFgfDJrKeXe8ijXgj_ks5Ww6VIwA%3D%3D")
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-collaborative-coding/master/data/intro_survey_data.csv?token=ABT2upFQZIFSpEQFgfDJrKeXe8ijXgj_ks5Ww6VIwA%3D%3D")
View(data)
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-collaborative-coding/master/data/intro_survey_data.csv?token=ABT2upFQZIFSpEQFgfDJrKeXe8ijXgj_ks5Ww6VIwA%3D%3D")
View(data)
setwd('/Users/baronbaura/Desktop/uw/informatics/info498f/a7-collaborative-coding/a7-collaborative-coding')
setwd('/Users/baronbaura/Desktop/uw/informatics/info498f/a7-collaborative-coding/a7-collaborative-coding/data')
data <- read.csv('intro_survey.data.csv')
setwd('/Users/baronbaura/Desktop/uw/informatics/info498f/a7-collaborative-coding/a7-collaborative-coding/data')
data <- read.csv('intro_survey_data.csv')
View(data)
source('scripts/summary_info.r')
source('scripts/summary_info.r')
setwd('/Users/baronbaura/Desktop/uw/informatics/info498f/a7-collaborative-coding/scripts')
source('scripts/summary_info.r')
source('summary_info.r')
View(info_function)
library(jsonlite)
library(plotly)
library(dplyr)
#Read in data
data <- fromJSON('https://raw.githubusercontent.com/mkfreeman/police-shooting/master/data/response.json')
# Dealing with the `Shots Fired` column
# Creating a new Numeric variable with no space in the name
# Replacing NA values with the mean (that makes sense, right?)
data$shots_fired <- as.numeric(data[,'Shots Fired'])
data <- data %>%
mutate(shots_fired = ifelse(is.na(shots_fired), mean(shots_fired, na.rm = T), shots_fired))
#### From here down, you should make changes ####
# Create a bubble map of the data
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = FALSE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 0,
subunitcolor = toRGB("gray85"),
countrycolor = toRGB('gray85')
)
# Create graph
plot_ly(data,
lon = lng,
lat = lat,
text = paste('<b>Name:</b>', data[,"Victim Name"], '<br><b>Shots Fired:</b>', data$shots_fired),
hoverinfo = 'text',
marker = list(size = 1 + shots_fired/3, opacity = .4, color = 'red'),
type = 'scattergeo',
locationmode = 'USA-states'
) %>%
layout(title = 'Crowdsourced Police Shootings', geo = g)
```
build_map <- function(x){
}
build_map(data)
build_map(data)
install.packages("shiny")
library(shiny)
install.packages("shiny")
library(shiny)
library(shiny)
install.packages("shiny")
library(shiny)
install.packages("shiny")
install.packages("shiny")
install.packages('shiny')
install.packages('shiny')
install.packages(shiny)
