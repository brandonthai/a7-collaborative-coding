return (ret)
}
```
This is a summary of the survey of the INFO 498 FC class that was filled out in the beginning of the quarter. There were a total of `r numOfResponse` and among them, there were: `r numOfFreshman` freshmen, `r numOfSophomore` sophomores, `r numOfJunior` juniors, and `r numOfSenior` seniors. Of the class, `r numofWindows` students use Windows as their primary OS, while `r numOfMac` students use Mac
data <- read.csv('../data/intro_survey_data.csv', stringsAsFactors = FALSE)
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GredeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GredeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
data <- read.csv('../data/intro_survey_data.csv', stringsAsFactors = FALSE)
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GredeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GredeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
ret$GradeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
source('summary_info.r')
data <- read.csv('../data/intro_survey_data.csv', stringsAsFactors = FALSE)
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GredeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GradeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GradeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GredeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
)
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GradeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GredeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GradeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GredeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
require('dplyr')
data <- read.csv('../data/intro_survey_data.csv', stringsAsFactors = FALSE)
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GradeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GredeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
source('summary_info.r')
data <- read.csv('../data/intro_survey_data.csv', stringsAsFactors = FALSE)
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GredeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GradeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
```{r,echo=FALSE,message=FALSE}
source('summary_info.r')
data <- read.csv('../data/intro_survey_data.csv', stringsAsFactors = FALSE)
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GradeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GradeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
View(GradeApplyToInfo)
info_function <- function(dataset) {
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GredeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
info_function <- function(dataset) {
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GredeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
View(GradeApplyToInfo)
setwd('/Users/baronbaura/Desktop/uw/Informatics/info498f/a7-collaborative-coding')
data <- read.csv('intro_survey_data.csv', stringsAsFactors = FALSE)
getwd
getwd()
setwd('/Users/baronbaura/Desktop/uw/Informatics/info498f/a7-collaborative-coding/data')
data <- read.csv('intro_survey_data.csv', stringsAsFactors = FALSE)
data <- read.csv('intro_survey_data.csv', stringsAsFactors = FALSE)
names(data) <- c('ClassStanding', 'InfoProspective', 'OS', 'TerminalExperience', 'GitFamiliarity', 'MarkDownFamiliarity', 'RFamiliarity', 'ProgrammingExperience', 'CountriesVisited', 'CatOrDog', 'SeahawksFan')
numOfResponse <- nrow(data)
numOfFreshman <- nrow(filter(data, ClassStanding == "Freshman"))
numOfSophomore <- nrow(filter(data, ClassStanding == "Sophomore"))
numOfJunior <- nrow(filter(data, ClassStanding == "Junior"))
numOfSenior <- nrow(filter(data, ClassStanding == "Senior"))
OSApplyToInfo <- data %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
GradeApplyToInfo <- data %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
# A function that takes in a dataset and returns a list of info about it:
info_function <- function(dataset) {
ret <- list()
ret$numOfResponse <- nrow(dataset)
ret$numOfFreshman <- nrow(filter(dataset, ClassStanding == "Freshman"))
ret$numOfSophomore <- nrow(filter(dataset, ClassStanding == "Sophomore"))
ret$numOfJunior <- nrow(filter(dataset, ClassStanding == "Junior"))
ret$numOfSenior <- nrow(filter(dataset, ClassStanding == "Senior"))
ret$numOfMac <- nrow(filter(dataset, OS == 'Mac'))
ret$numoOfWindows <- nrow(filter(dataset, OS == 'Windows'))
ret$OSApplyToInfo <- dataset %>%
group_by(OS) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
ret$GradeApplyToInfo <- dataset %>%
group_by(ClassStanding) %>%
filter(InfoProspective == 'Yes') %>%
summarise(InfoProspectives = n())
return (ret)
}
```
This is a summary of the survey of the INFO 498 FC class that was filled out in the beginning of the quarter. There were a total of `r numOfResponse` and among them, there were: `r numOfFreshman` freshmen, `r numOfSophomore` sophomores, `r numOfJunior` juniors, and `r numOfSenior` seniors. Of the class, `r numofWindows` students use Windows as their primary OS, while `r numOfMac` students use Mac
```{r,echo=FALSE,message=FALSE}
Among the students,
`r filter(GradeApplyToInfo) %>%
select(InfoProspectives)` freshmen are applying to the Informatics major.
`r` sophomores are applying to the major
`r` juniors are applying to the major
`r` seniors are applying to the major
View(data)
View(GradeApplyToInfo)
GradeApplyToInfo %>%
filter(Freshman) %>%
select(InfoProspectives)
View(GradeApplyToInfo)
GradeApplyToInfo %>%
filter(ClassStanding == Freshman) %>%
select(InfoProspectives)
GradeApplyToInfo %>%
filter(ClassStanding = Freshman) %>%
select(InfoProspectives)
GradeApplyToInfo %>%
filter(ClassStanding == 'Freshman') %>%
select(InfoProspectives)
View(OSApplyToInfo)
GradeApplyToInfo %>%
filter(ClassStanding == 'Sophomore') %>%
select(InfoProspectives)
r GradeApplyToInfo %>%
filter(ClassStanding == 'Sophomore') %>%
select(InfoProspectives)
GradeApplyToInfo %>%
filter(ClassStanding == 'Sophomore') %>%
select(InfoProspectives)
GradeApplyToInfo %>%
filter(ClassStanding == 'Junior') %>%
select(InfoProspectives)
OSApplyToInfo %>%
filter(OS == 'Linux') %>%
select(InfoProspectives)
`r OSApplyToInfo %>%
filter(OS == 'Linux') %>%
select(InfoProspectives)` student uses Linux and is planning to apply to the Informatics major
`r OSApplyToInfo %>%
filter(OS == 'Mac') %>%
select(InfoProspectives)` students use Mac and are planning to apply to the major
`r OSApplyToInfo %>%
filter(OS == 'Other: Windows at home, Linux (Ubuntu) at work) %>%
select(InfoProspectives)` student uses a mix of Windows and Linux and is planning to apply to the major
`r OSApplyToInfo %>%
filter(OS == 'Windows') %>%
select(InfoProspectives)` students use Windows and are planning to apply to the major
OSApplyToInfo %>%
filter(OS == 'Linux') %>%
select(InfoProspectives)
OSApplyToInfo %>%
filter(OS == 'Mac') %>%
select(InfoProspectives
)
r OSApplyToInfo %>%
filter(OS == 'Other: Windows at home, Linux (Ubuntu) at work) %>%
select(InfoProspectives)
)
)
}
))))
OSApplyToInfo %>%
filter(OS == 'Other: Windows at home, Linux (Ubuntu) at work) %>%
select(InfoProspectives)
OSApplyToInfo %>%
filter(OS == 'Windows') %>%
select(InfoProspectives)
OSApplyToInfo %>%
filter(OS == 'Windows') %>%
select(InfoProspectives)
OSApplyToInfo %>%
filter(OS == 'Other: Windows at home, Linux (Ubuntu) at work') %>%
select(InfoProspectives)`
)
OSApplyToInfo %>%
filter(OS == 'Other: Windows at home, Linux (Ubuntu) at work') %>%
select(Inf)oProspectives)
OSApplyToInfo %>%
filter(OS == 'Other: Windows at home, Linux (Ubuntu) at work') %>%
select(InfoProspectives)
setwd('/Users/baronbaura/Desktop/uw/Informatics/info498f/a7-collaborative-coding/scripts')
source('chart2.r')
make_chart_2(chart2)
make_chart_2(data)
setwd('/Users/baronbaura/Desktop/uw/Informatics/info498f/a7-collaborative-coding/scripts')
source('chart_1.r')
build_chart_1(data)
View(make_chart_2)
View(build_chart_1)
build_chart_1(data)
data <- read.csv('intro_survey_data.csv', stringsAsFactors = FALSE)
pwd
getpwd()
getwd
getwd()
setwd(dir = '../a7-collaborative-coding/)
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
data <- read.csv('data/intro_survey_data.csv', stringsAsFactors = FALSE)
setwd
